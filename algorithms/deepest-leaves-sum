

Given a binary tree, return the sum of values of its deepest leaves.



Example 1:

![](https://assets.leetcode.com/uploads/2019/07/31/1483_ex1.png)

    
    
    Input: root = [1,2,3,4,5,null,6,7,null,null,null,null,8]
    Output: 15
    



Constraints:

  * The number of nodes in the tree is between `1` and `10^4`.
  * The value of nodes is between `1` and `100`.

Exp Starter Code:
/*** Definition for a binary tree node.* struct TreeNode {*     int val;*     TreeNode *left;*     TreeNode *right;*     TreeNode() : val(0), left(nullptr), right(nullptr) {}*     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}*     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}* };*/class Solution {public:int deepestLeavesSum(TreeNode* root) {}};â€‹