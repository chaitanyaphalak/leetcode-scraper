

A binary tree is univalued if every node in the tree has the same value.

Return `true` if and only if the given tree is univalued.



Example 1:

![](https://assets.leetcode.com/uploads/2018/12/28/unival_bst_1.png)

    
    
    Input: [1,1,1,1,1,null,1]
    Output: true
    

Example 2:

![](https://assets.leetcode.com/uploads/2018/12/28/unival_bst_2.png)

    
    
    Input: [2,2,2,5,2]
    Output: false
    



Note:

  1. The number of nodes in the given tree will be in the range `[1, 100]`.
  2. Each node's value will be an integer in the range `[0, 99]`.

Exp Starter Code:
/*** Definition for a binary tree node.* struct TreeNode {*     int val;*     TreeNode *left;*     TreeNode *right;*     TreeNode() : val(0), left(nullptr), right(nullptr) {}*     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}*     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}* };*/class Solution {public:bool isUnivalTree(TreeNode* root) {}};â€‹